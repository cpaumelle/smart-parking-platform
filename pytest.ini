[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers (test categories)
markers =
    unit: Unit tests (fast, no external dependencies)
    property: Property-based tests using hypothesis
    integration: Integration tests requiring docker-compose
    load: Load tests using locust
    slow: Tests that take significant time
    smoke: Quick smoke tests for basic functionality

# Output options
addopts =
    -v
    -l
    -ra
    --tb=short
    --strict-markers
    --cov-report=term-missing
    --cov-report=html
    --junit-xml=test-results/junit.xml

# Asyncio configuration
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = src
omit =
    */tests/*
    */migrations/*
    */__pycache__/*
    */venv/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    @abstractmethod

[coverage:html]
directory = htmlcov
